// This is the default html and body font-size for the base rem value.
$rem-base: 16px !default;

$modules: () !default;
@mixin exports($name) {
  @if (index($modules, $name) == false) {
    $modules: append($modules, $name);
    @content;
  }
}

//
// @functions
//

@function lower-bound($range){
  @if length($range) <= 0 {
    @return 0;
  }
  @return nth($range,1);
}

@function upper-bound($range) {
  @if length($range) < 2 {
    @return 999999999999;
  }
  @return nth($range, 2);
}


// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

@function convert-to-rem($value, $base-value: $rem-base)  {
  $value: strip-unit($value) / strip-unit($base-value) * 1rem;
  @if ($value == 0rem) { $value: 0; } // Turn 0rem into 0
  @return $value;
}

@function rem-calc($values, $base-value: $rem-base) {
  $max: length($values);

  @if $max == 1 { @return convert-to-rem(nth($values, 1), $base-value); }

  $remValues: ();
  @for $i from 1 through $max {
    $remValues: append($remValues, convert-to-rem(nth($values, $i), $base-value));
  }
  @return $remValues;
}

$mini-scale: 2.2;
$half-scale: 2;
$small-scale: 1.6;
$medium-scale: 1.6;

$spritesheetX: 1355px;
$spritesheetY: 926px;

$frameX: 1273px;
$frameY: 777px;

$sceneX: 1071px;
$sceneY: 573px;

$cloudX: 554px;
$cloudY: 137px; 

$galleryXY: 512px;

$shadowX: 512px;
$shadowY: 128px;

$smokeX: 512px;
$smokeY: 256px;

$peopleX: 88px;
$peopleY: 98px;

$treesX: 640px;
$treesY: 256px;

$bearX: 273px;
$bearY: 239px;

$eyesX: 273px;
$eyesY: 60px;

$earsX: 72px; 
$earsY: 72px; 

$pawX: 112px; 
$pawY: 112px; 

$pawX: 140px; 
$pawY: 130px; 

$shineX: 70px; 
$shineY: 70px; 

$signX: 154px; 
$signY: 126px; 

$logoX: 350px;

$downloadX: 350px;



// Media Query Ranges
$small-range: (0em, 32em) !default;
$medium-range: (40.063em, 64em) !default;
$large-range: (64.063em, 90em) !default;
$xlarge-range: (90.063em, 120em) !default;
$xxlarge-range: (120.063em) !default;


$screen: "only screen" !default;

$landscape: "#{$screen} and (orientation: landscape)" !default;
$portrait: "#{$screen} and (orientation: portrait)" !default;

$small-up: $screen !default;
$small-only: "#{$screen} and (max-width: #{upper-bound($small-range)})" !default;

$medium-up: "#{$screen} and (min-width:#{lower-bound($medium-range)})" !default;
$medium-only: "#{$screen} and (min-width:#{lower-bound($medium-range)}) and (max-width:#{upper-bound($medium-range)})" !default;

$large-up: "#{$screen} and (min-width:#{lower-bound($large-range)})" !default;
$large-only: "#{$screen} and (min-width:#{lower-bound($large-range)}) and (max-width:#{upper-bound($large-range)})" !default;

$xlarge-up: "#{$screen} and (min-width:#{lower-bound($xlarge-range)})" !default;
$xlarge-only: "#{$screen} and (min-width:#{lower-bound($xlarge-range)}) and (max-width:#{upper-bound($xlarge-range)})" !default;

$xxlarge-up: "#{$screen} and (min-width:#{lower-bound($xxlarge-range)})" !default;
$xxlarge-only: "#{$screen} and (min-width:#{lower-bound($xxlarge-range)}) and (max-width:#{upper-bound($xxlarge-range)})" !default;


$color-darkblue: #41678B;
$color-aqua: #53799E;
$color-darkbrown: #4c4942;
$color-green: #76CA5B;

$social-facebook-blue: #3b5997;
$social-twitter-blue: #32ccfe;
$social-googleplus-red: #f23c26;

$typeface-primary: 'Londrina Solid', sans-serif;
//$asset-path: '../delay.php?img=images';
//$asset-path: '../images';
$asset-path: '//wac.76ff.edgecastcdn.net/0076FF/hbwebmedia/bva/images';


$font-size-base: 16px !default;
$font-size-regular: 20px;
$font-size-med: 24px;
$font-size-large: 24px;
$font-size-xlarge: 40px;
	
  
// Allow vendor prefixes

$vendors: true;  
  
/* Mixins */
	
/* Clear floats */  
@mixin clearfix() {
  *zoom:1;
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}
  
/* Replaced by Bourbon functions */
@mixin vendor-prefix($name, $argument) {
  -webkit-#{$name}: #{$argument};
  -ms-#{$name}: #{$argument};
  -moz-#{$name}: #{$argument};
  #{$name}: #{$argument};
}
/*
@mixin keyframes( $name ) {
    @-webkit-keyframes $name {
        @content;
    }
    @-moz-keyframes $name {
        @content;
    }
    @keyframes $name {
        @content;
    }
}
*/

@mixin box-sizing($type:border-box) {
  @if $vendors {
    -moz-box-sizing: $type;
    -webkit-box-sizing: $type;
  }
  box-sizing: $type;
}



// We use these to control text direction settings
$text-direction: ltr !default;

// NOTE: No need to change this conditional statement, $text-direction variable controls it all.
$default-float: left !default;
$opposite-direction: right !default;
@if $text-direction == ltr {
  $default-float: left;
  $opposite-direction: right;
} @else {
  $default-float: right;
  $opposite-direction: left;
}