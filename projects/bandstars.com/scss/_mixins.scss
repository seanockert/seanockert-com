// ---- CSS3 SASS MIXINS ----
// https://github.com/madr/css3-sass-mixins
//  
//  Copyright (C) 2011 by Anders Ytterstr√∂m
//  
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE.
//

// ---- LEGACY IE SUPPORT USING FILTERS ----
//  Should IE filters be used or not?
//  PROS: gradients, drop shadows etc will be handled by css.
//  CONS: will harm the site performance badly, 
//        especially on sites with heavy rendering and scripting. 
$useIEFilters: 0; 
// might be 0 or 1. disabled by default.
// ---- /LEGACY IE SUPPORT USING FILTERS ----

@mixin background-size ($value) {
  -webkit-background-size: $value;
          background-size: $value;
}

@mixin border-radius ($values) {
     -moz-border-radius: $values;
  -webkit-border-radius: $values;
          border-radius: $values;
             -moz-background-clip: padding; 
          -webkit-background-clip: padding-box; 
                  background-clip: padding-box;
}

@mixin box-shadow ($x, $y, $offset, $hex, $ie: $useIEFilters, $inset: null, $spread:null) {
     -moz-box-shadow: $x $y $offset $spread $hex $inset;
  -webkit-box-shadow: $x $y $offset $spread $hex $inset;
          box-shadow: $x $y $offset $spread $hex $inset;
  
  @if $ie == 1 {
    $iecolor: '#' + red($hex) + green($hex) + blue($hex);
    filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=#{$x}, OffY=#{$y}, Color='#{$iecolor}');
    -ms-filter: quote(progid:DXImageTransform.Microsoft.dropshadow(OffX=#{$x}, OffY=#{$y}, Color='#{$iecolor}'));
  }
}

@mixin box-sizing($type:border-box) {
  -moz-box-sizing: $type;
  -webkit-box-sizing: $type;
  box-sizing: $type;
}

@mixin linear-gradient($from, $to, $ie: $useIEFilters, $mid: $to, $midPercent: 100%) {
  @if $ie != 1 { background-color: $to; }
  @if $ie != 1 { background-color: $to; }
  
  background-image: -webkit-gradient(linear,left top,left bottom,color-stop(0, $from),color-stop($midPercent, $mid),color-stop(100%, $to));
  background-image: -webkit-linear-gradient(top, $from 0%, $mid $midPercent, $to 100%);
  background-image: -moz-linear-gradient(top, $from 0%, $mid $midPercent, $to 100%);
  background-image: -ms-linear-gradient(top, $from 0%, $mid $midPercent, $to 100%);
  background-image: -o-linear-gradient(top, $from 0%, $mid $midPercent, $to 100%);
  background-image: linear-gradient(top bottom, $from 0%, $mid $midPercent, $to 100%);
  
  @if $ie == 1 { 
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}');
    -ms-filter: quote(progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}'));
  }
}

@mixin transform ($transforms) {
     -moz-transform: $transforms;
       -o-transform: $transforms;
      -ms-transform: $transforms;
  -webkit-transform: $transforms;
          transform: $transforms;
}

    @mixin matrix ($a, $b, $c, $d, $e, $f) {
         -moz-transform: matrix($a, $b, $c, $d, #{$e}px, #{$f}px);
           -o-transform: matrix($a, $b, $c, $d, $e, $f);
          -ms-transform: matrix($a, $b, $c, $d, $e, $f);
      -webkit-transform: matrix($a, $b, $c, $d, $e, $f);
              transform: matrix($a, $b, $c, $d, $e, $f);
    }

    @mixin rotate ($deg) {
      @include transform(rotate(#{$deg}deg));
    }

    @mixin scale ($size) {
      @include transform(scale(#{$size}));
    }

    @mixin translate ($x, $y) {
      @include transform(translate($x, $y));
    }

@mixin transition ($value) {
     -moz-transition: $value;
       -o-transition: $value;
      -ms-transition: $value;
  -webkit-transition: $value;
          transition: $value;
}

// ==== /CSS3 SASS MIXINS ====
